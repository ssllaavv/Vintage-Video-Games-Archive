name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up environment variables
      run: |
        echo "DJANGO_ENV_FILE=$(cat ./envs/tests/.test.env | grep -v '^#' | tr '\n' ' ')" >> $GITHUB_ENV

    - name: Create Migrations
      run: |
        python manage.py makemigrations accounts
        python manage.py makemigrations
      env:
        ${{ env.DJANGO_ENV_FILE }}

    - name: Apply Migrations
      run: |
        python manage.py migrate
      env:
        ${{ env.DJANGO_ENV_FILE }}

    - name: Run Tests
      run: |
        python manage.py test --verbosity=2
      env:
        ${{ env.DJANGO_ENV_FILE }}

# build-and-push and deploy jobs are commented out for now

# build-and-push and deploy jobs are commented out for now
#  build-and-push:
#    needs: test
#    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/main'
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Login to DockerHub
#      uses: docker/login-action@v1
#      with:
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_PASSWORD }}
#
#    - name: Build and push Docker image
#      uses: docker/build-push-action@v2
#      with:
#        context: .
#        push: true
#        tags: ${{ secrets.DOCKER_USERNAME }}/games-archive:latest
#
#  deploy:
#    needs: build-and-push
#    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/main'
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Install sshpass
#      run: sudo apt-get install -y sshpass
#
#    - name: Copy deployment files
#      run: |
#        mkdir -p deploy
#        cp docker-compose.yml deploy/
#        cp -r nginx deploy/
#
#    - name: Deploy to Azure VM
#      env:
#        SSH_PASS: ${{ secrets.SSH_PASSWORD }}
#      run: |
#        # Disable strict host key checking
#        echo "StrictHostKeyChecking no" >> ~/.ssh/config
#
#        # Copy docker-compose file
#        sshpass -p "$SSH_PASS" scp -r deploy/* ${{ secrets.SSH_USERNAME }}@${{ secrets.AZURE_HOST }}:/home/${{ secrets.SSH_USERNAME }}/games-archive/
#
#        # Deploy using Docker Compose
#        sshpass -p "$SSH_PASS" ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.AZURE_HOST }} "\
#          cd /home/${{ secrets.SSH_USERNAME }}/games-archive && \
#          docker-compose pull && \
#          docker-compose up -d"